{% extends 'base.html.twig' %}
{% block title %}Perfil
{% endblock %}
{% block stylesheets %}
    {{ parent() }}

    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
    <style>
        body {
            background-color: white;
            overflow-x:hidden;
            overflow-y:hidden;
        }

        @media (min-width: 992px) {
            .table-responsive {
                max-height: 430px; 
                position:relative;
                left:130px;
            }
            .choser{position:relative; top:-400px; width:15%; left:1030px;}

        }

        @media (max-width: 576px) {
            .table-responsive {
                min-height: 400px; 
            }
            .choser{position:relative; top:-170px;}
        }
        
    </style>
{% endblock %}

{% block body %}
    {{ parent() }}
    <div class="container">
        <h1 class="text-dark m-4 mt-5" style="text-align: center; font-family: Arial, sans-serif;">Gastos de {{ app.user.name }}</h1>
        <br>
        <div class="table-responsive">
            <canvas id="myChart" style="display: flex; justify-content: center;"></canvas>
        </div>
        <div class="choser mt-4 ml-2 mr-2">
            <select class="form-select" id="opcion" style="width: 100%;" onchange="updateChart(this.value)">
                <option value="todosLosAnios">Todos los años</option>
                <option value="esteAnio">Este año</option>
                <option value="esteMes">Este mes</option>
            </select>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        let chart = null; 

        function updateChart(opcion) {
            const ctx = document.getElementById('myChart');
            const datosJson = {{ datosJson|raw }};
            let fechasPrecios = [];

            if (chart) {
             
                chart.destroy();
            }

            if (opcion === 'esteAnio') {
                const anioActual = new Date().getFullYear();
                for (let i = 0; i < datosJson.length; i++) {
                    const fecha = new Date(datosJson[i].fecha);
                    if (fecha.getFullYear() === anioActual) {
                        const fechaFormateada = fecha.toLocaleDateString('es-ES', {
                            month: 'short',
                            day: 'numeric'
                        });
                        const precio = datosJson[i].precio;
                        fechasPrecios.push({ fecha: fechaFormateada, precio: precio });
                    }
                }
            } else if (opcion === 'todosLosAnios') {
                for (let i = 0; i < datosJson.length; i++) {
                    const fecha = new Date(datosJson[i].fecha);
                    const fechaFormateada = fecha.toLocaleDateString('es-ES', {
                        year: 'numeric',
                        month: 'short'
                    });
                    const precio = datosJson[i].precio;
                    fechasPrecios.push({ fecha: fechaFormateada, precio: precio });
                }
            } else if (opcion === 'esteMes') {
                const mesActual = new Date().getMonth();
                const anioActual = new Date().getFullYear();
                for (let i = 0; i < datosJson.length; i++) {
                    const fecha = new Date(datosJson[i].fecha);
                    const mes = fecha.getMonth();
                    const anio = fecha.getFullYear();
                    if (mes === mesActual && anio === anioActual) {
                        const fechaFormateada = fecha.toLocaleDateString('es-ES', {
                            month: 'short',
                            day: 'numeric'
                        });
                        const precio = datosJson[i].precio;
                        fechasPrecios.push({ fecha: fechaFormateada, precio: precio });
                    }
                }
            }
            
            fechasPrecios.sort((a, b) => {
                const dateA = new Date(a.fecha);
                const dateB = new Date(b.fecha);
                return dateA - dateB;
            });

            const fechas = fechasPrecios.map((item) => item.fecha);
            const precios = fechasPrecios.map((item) => item.precio);

            chart = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: fechas,
                    datasets: [{
                        label: 'Precios',
                        data: precios,
                        borderWidth: 1
                    }]
                },
                options: {
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });

            chart.update();
        }

        window.onload = function() {
            const opcionPredeterminada = 'todosLosAnios';
            updateChart(opcionPredeterminada);
        };
    </script>
{% endblock %}
